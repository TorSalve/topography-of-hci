/* Map Editor Styles */
.mapEditor {
  display: flex;
  flex-direction: column;
  height: 80vh;
  min-height: 600px;
  background-color: #f5f5f5;
  position: relative;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

/* New: Top Menu Bar */
.menuBar {
  display: flex;
  align-items: center;
  gap: 16px;
  padding: 6px 12px;
  background-color: #ffffff;
  border-bottom: 1px solid #e0e0e0;
}

.menuItem {
  position: relative;
}

.menuItem summary {
  list-style: none;
  cursor: pointer;
  padding: 6px 10px;
  border-radius: 4px;
}

.menuItem[open] summary,
.menuItem summary:hover {
  background: #f0f0f0;
}

.menuDropdown {
  position: absolute;
  top: 100%;
  left: 0;
  min-width: 180px;
  background: #fff;
  border: 1px solid #e0e0e0;
  border-radius: 6px;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);
  padding: 6px;
  display: flex;
  flex-direction: column;
  z-index: 30;
}

.menuDropdown button {
  text-align: left;
  background: transparent;
  border: none;
  padding: 8px 10px;
  border-radius: 4px;
  font-size: 13px;
  cursor: pointer;
}

.menuDropdown button:hover:not(:disabled) {
  background: #f5f7fb;
}

.menuDropdown hr {
  border: none;
  border-top: 1px solid #eee;
  margin: 6px 2px;
}

/* Canvas Container */
.canvasContainer {
  flex: 1;
  position: relative;
  background-color: #ffffff;
  border: 1px solid #e0e0e0;
  margin: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  padding: 0;
  user-select: none; /* Prevent text selection during panning */
}

/* DEBUG: Temporarily disable hover effects to isolate the issue */
.mapCanvas {
  width: 100%;
  height: 100%;
  max-width: 100%;
  max-height: 100%;
  border: none;
  outline: none;
  user-select: none;
  transition: transform 0.1s ease;
  background: white;

  /* Smooth cursor transitions */
  &:hover {
    transition: cursor 0.2s ease;
  }
}

/* Make paths easier to select with hover feedback - now handled by DOM cloning */
.contentGroup path,
.contentGroup polyline,
.contentGroup polygon,
.contentGroup line,
.contentGroup rect,
.contentGroup circle,
.contentGroup ellipse,
.contentGroup use {
  cursor: pointer;
  transition: all 0.15s ease;

  /* Hover effects now handled by DOM cloning instead of CSS */

  &.selected {
    stroke: #00a3ff !important;
    stroke-width: max(
      2px,
      calc(var(--original-stroke-width, 1) * 1.5)
    ) !important;
    filter: drop-shadow(0 0 4px rgba(0, 163, 255, 0.8));
    opacity: 1;
  }
}

/* Improve path selection by adding invisible wider stroke for easier clicking */
.contentGroup path,
.contentGroup polyline,
.contentGroup line {
  stroke-linecap: round;
  stroke-linejoin: round;
}

/* svg.js selection handles styling */
:global(.svg-select-handle) {
  fill: #00a3ff !important;
  stroke: #ffffff !important;
  stroke-width: 2px !important;
  cursor: pointer !important;
  opacity: 0.9 !important;
  transition: all 0.2s ease !important;

  &:hover {
    fill: #0066cc !important;
    stroke-width: 3px !important;
    opacity: 1 !important;
    transform: scale(1.1) !important;
  }
}

:global(.svg-select-points) {
  cursor: pointer !important;
}

:global(.svg-select-line) {
  stroke: #00a3ff !important;
  stroke-width: 1px !important;
  stroke-dasharray: 4 2 !important;
  opacity: 0.8 !important;
  pointer-events: none !important;
}

/* svg.js resize handles */
:global(.svg-resize-handle) {
  fill: #00a3ff !important;
  stroke: #ffffff !important;
  stroke-width: 2px !important;
  cursor: pointer !important;
  opacity: 0.9 !important;
  transition: all 0.2s ease !important;

  &:hover {
    fill: #0066cc !important;
    opacity: 1 !important;
    transform: scale(1.15) !important;
  }
}

/* Different cursors for different resize handles */
:global(.svg-resize-handle[data-direction="nw"]),
:global(.svg-resize-handle[data-direction="se"]) {
  cursor: nw-resize !important;
}

:global(.svg-resize-handle[data-direction="ne"]),
:global(.svg-resize-handle[data-direction="sw"]) {
  cursor: ne-resize !important;
}

:global(.svg-resize-handle[data-direction="n"]),
:global(.svg-resize-handle[data-direction="s"]) {
  cursor: ns-resize !important;
}

:global(.svg-resize-handle[data-direction="e"]),
:global(.svg-resize-handle[data-direction="w"]) {
  cursor: ew-resize !important;
}

/* svg.js rotation handle */
:global(.svg-rotation-handle) {
  fill: #ff6b6b !important;
  stroke: #ffffff !important;
  stroke-width: 2px !important;
  cursor: grab !important;
  opacity: 0.9 !important;
  transition: all 0.2s ease !important;

  &:hover {
    fill: #ff5252 !important;
    opacity: 1 !important;
    transform: scale(1.2) !important;
  }

  &:active {
    cursor: grabbing !important;
  }
}

/* svg.js drag handles */
:global(.svg-drag-handle) {
  cursor: move !important;
  opacity: 0.8 !important;
  transition: opacity 0.2s ease !important;

  &:hover {
    opacity: 1 !important;
  }

  &:active {
    cursor: grabbing !important;
  }
}

/* Hover overlay styling */
:global(.hover-overlay) {
  pointer-events: none !important;
  opacity: 0.7 !important;
  stroke: #0066ff !important;
  fill: none !important;
  transition: opacity 0.15s ease !important;
}

/* Custom transform feedback */
.transformFeedback {
  position: absolute;
  top: 10px;
  left: 50%;
  transform: translateX(-50%);
  background: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 6px 12px;
  border-radius: 4px;
  font-size: 12px;
  font-family: monospace;
  pointer-events: none;
  z-index: 1000;
  opacity: 0;
  transition: opacity 0.2s ease;

  &.visible {
    opacity: 1;
  }
}

/* Drawing mode indicator */
.drawingModeIndicator {
  position: absolute;
  top: 50px;
  left: 50%;
  transform: translateX(-50%);
  background: linear-gradient(135deg, #6366f1, #8b5cf6);
  color: white;
  padding: 8px 16px;
  border-radius: 20px;
  font-size: 14px;
  font-weight: 500;
  pointer-events: none;
  z-index: 1001;
  box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);
  animation: drawingPulse 2s infinite;
  display: flex;
  align-items: center;
  gap: 8px;
}

@keyframes drawingPulse {
  0%,
  100% {
    box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);
  }
  50% {
    box-shadow: 0 6px 20px rgba(99, 102, 241, 0.5);
    transform: translateX(-50%) translateY(-1px);
  }
}

/* Marquee selection styling */
:global(#marquee-selection-group) {
  pointer-events: none !important;
}

:global(#marquee-main-rect) {
  fill: rgba(0, 163, 255, 0.1) !important;
  stroke: #00a3ff !important;
  stroke-width: 1px !important;
  stroke-dasharray: 4 2 !important;
  opacity: 0.8 !important;
  pointer-events: none !important;
}

/* Status Bar */
.statusBar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 8px 16px;
  background-color: #f8f9fa;
  border-top: 1px solid #e0e0e0;
  font-size: 12px;
  color: #666666;
  flex-shrink: 0;
}

.statusBar span {
  margin-right: 16px;
}

/* New: Work area with left toolbar, canvas, and right properties panel */
.workArea {
  display: grid;
  grid-template-columns: 56px 1fr 320px;
  height: 100%;
}

.leftToolbar {
  background: #ffffff;
  border-right: 1px solid #e0e0e0;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 8px 4px;
  gap: 6px;
  overflow: visible; /* allow tooltips to overflow */
}

.leftToolButton {
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1px solid #d0d0d0;
  background: #fff;
  border-radius: 4px;
  cursor: pointer;
  position: relative; /* anchor custom tooltip */
}

/* Custom tooltips for left toolbar buttons */
.leftToolButton[data-tooltip]::after {
  content: attr(data-tooltip);
  position: absolute;
  left: 48px; /* to the right of the button */
  top: 50%;
  transform: translateY(-50%) translateX(-4px);
  background: #111;
  color: #fff;
  font-size: 12px;
  line-height: 1;
  padding: 6px 8px;
  border-radius: 4px;
  white-space: nowrap;
  box-shadow: 0 4px 14px rgba(0, 0, 0, 0.2);
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.15s ease, transform 0.15s ease;
  z-index: 50;
}

.leftToolButton[data-tooltip]::before {
  content: "";
  position: absolute;
  left: 42px;
  top: 50%;
  transform: translateY(-50%);
  border-width: 6px;
  border-style: solid;
  border-color: transparent #111 transparent transparent; /* right-pointing arrow */
  opacity: 0;
  transition: opacity 0.15s ease;
  z-index: 49;
}

.leftToolButton[data-tooltip]:hover::after,
.leftToolButton[data-tooltip]:focus-visible::after {
  opacity: 1;
  transform: translateY(-50%) translateX(0);
}

.leftToolButton[data-tooltip]:hover::before,
.leftToolButton[data-tooltip]:focus-visible::before {
  opacity: 1;
}

.leftToolButton:hover {
  background: #f0f0f0;
  border-color: #999;
}

.leftToolButton.active {
  background-color: #2563eb;
  color: white;
  border-color: #1d4ed8;
}

.leftToolIcon {
  font-size: 16px;
}

/* Hide legacy top toolbar */
.toolbar {
  display: none;
}

/* Right Properties Panel (part of work area) */
.rightPropertiesPanel {
  background: #ffffff;
  border-left: 1px solid #e0e0e0;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  box-shadow: -2px 0 8px rgba(0, 0, 0, 0.05);
}

/* Responsive Design */
@media (max-width: 1024px) {
  .workArea {
    grid-template-columns: 56px 1fr 280px;
  }

  .rightPropertiesPanel {
    width: 280px;
  }

  .toolbar {
    padding: 6px 12px;
    gap: 12px;
  }

  .toolButton {
    min-width: 50px;
    height: 36px;
    font-size: 11px;
  }

  .toolIcon {
    font-size: 12px;
  }

  .toolLabel {
    font-size: 9px;
  }
}

@media (max-width: 768px) {
  .mapEditor {
    height: 70vh;
  }

  .workArea {
    grid-template-columns: 48px 1fr;
    grid-template-rows: 1fr auto;
  }

  .rightPropertiesPanel {
    grid-column: 1 / -1;
    height: 40vh;
    border-left: none;
    border-top: 1px solid #e0e0e0;
    box-shadow: 0 -2px 8px rgba(0, 0, 0, 0.05);
  }

  .leftToolbar {
    width: 48px;
  }

  .leftToolButton {
    width: 36px;
    height: 36px;
  }

  .toolbar {
    flex-wrap: wrap;
    padding: 4px 8px;
    gap: 8px;
  }

  .toolGroup {
    gap: 2px;
  }

  .toolButton {
    min-width: 45px;
    height: 32px;
  }

  .toolContent {
    gap: 1px;
  }

  .toolIcon {
    font-size: 11px;
  }

  .toolLabel {
    font-size: 8px;
  }
}

/* Dark mode support */
@media (prefers-color-scheme: dark) {
  .mapEditor {
    background-color: #1a1a1a;
  }

  .toolbar {
    background-color: #2d2d2d;
    border-bottom-color: #404040;
  }

  .toolButton {
    background-color: #3d3d3d;
    border-color: #505050;
    color: #ffffff;
  }

  .toolButton:hover {
    background-color: #4d4d4d;
    border-color: #606060;
  }

  .canvasContainer {
    background-color: #2d2d2d;
    border-color: #404040;
  }

  .statusBar {
    background-color: #2d2d2d;
    border-top-color: #404040;
    color: #cccccc;
  }

  .rightPropertiesPanel {
    background-color: #2d2d2d;
    border-left-color: #404040;
  }

  .panel {
    background-color: #2d2d2d;
    border-bottom-color: #404040;
  }

  .panel h3 {
    color: #ffffff;
    background-color: #333333;
  }

  .panel p {
    color: #cccccc;
  }

  /* Adjust tooltip for dark mode to match theme */
  .leftToolButton[data-tooltip]::after {
    background: #222;
  }
  .leftToolButton[data-tooltip]::before {
    border-color: transparent #222 transparent transparent;
  }
}

/* Animation utilities */
.fade-in {
  animation: fadeIn 0.3s ease-in-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.slide-in {
  animation: slideIn 0.3s ease-in-out;
}

@keyframes slideIn {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0);
  }
}

/* Loading states */
.loading-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(255, 255, 255, 0.8);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 100;
}

.loading-spinner {
  width: 40px;
  height: 40px;
  border: 4px solid #e0e0e0;
  border-top: 4px solid #2563eb;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Side Panels (legacy - now replaced by rightPropertiesPanel) */
.sidePanels {
  display: none; /* Hidden since we now use rightPropertiesPanel in work area */
}

.panel {
  background: #ffffff;
  border-bottom: 1px solid #e9ecef;
  overflow-y: auto;

  h3 {
    margin: 0;
    padding: 16px;
    font-size: 16px;
    font-weight: 600;
    color: #333;
    background: #f8f9fa;
    border-bottom: 1px solid #e9ecef;
    position: sticky;
    top: 0;
    z-index: 1;
  }

  > div:not(h3) {
    padding: 0 16px 16px 16px;
  }
}

.layersPanel {
  flex: 0 0 200px;
  min-height: 200px;
}

.propertiesPanel {
  flex: 1;
  min-height: 400px;

  input,
  select,
  textarea {
    font-size: 14px;

    &:focus {
      outline: none;
      border-color: #00a3ff;
      box-shadow: 0 0 0 2px rgba(0, 163, 255, 0.2);
    }
  }

  button {
    transition: all 0.2s ease;
    cursor: pointer;

    &:hover {
      background: #f0f0f0 !important;
      border-color: #999 !important;
    }

    &:active {
      transform: translateY(1px);
    }
  }
}

/* Inspector-specific styles */
.inspectorSection {
  margin-bottom: 16px;

  .sectionHeader {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 8px 0;
    border-bottom: 1px solid #e9ecef;
    cursor: pointer;
    font-weight: 500;
    user-select: none;

    &:hover {
      background: rgba(0, 163, 255, 0.05);
    }
  }

  .sectionContent {
    padding: 12px 0;

    .formGroup {
      margin-bottom: 12px;

      label {
        display: block;
        margin-bottom: 4px;
        font-size: 0.9em;
        font-weight: 500;
        color: #555;
      }

      .inputGroup {
        display: flex;
        gap: 8px;
        align-items: center;

        input[type="color"] {
          width: 40px;
          height: 30px;
          border: none;
          border-radius: 4px;
          cursor: pointer;
        }

        input[type="range"] {
          flex: 1;

          &::-webkit-slider-thumb {
            background: #00a3ff;
            border: 2px solid #ffffff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
          }

          &::-moz-range-thumb {
            background: #00a3ff;
            border: 2px solid #ffffff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
          }
        }

        input[type="number"] {
          width: 60px;
          padding: 4px;
          border: 1px solid #ddd;
          border-radius: 4px;
          font-size: 0.8em;
        }

        input[type="text"] {
          flex: 1;
          padding: 4px 8px;
          border: 1px solid #ddd;
          border-radius: 4px;
          font-size: 0.8em;
        }

        select {
          flex: 1;
          padding: 4px;
          border: 1px solid #ddd;
          border-radius: 4px;
          font-size: 0.8em;
          background: white;
        }
      }
    }

    .buttonGroup {
      display: flex;
      gap: 4px;

      button {
        padding: 4px 8px;
        font-size: 0.8em;
        border: 1px solid #ddd;
        border-radius: 3px;
        background: #fff;

        &:hover {
          background: #f5f5f5;
        }
      }
    }

    .gridLayout {
      display: grid;
      gap: 8px;

      &.twoColumns {
        grid-template-columns: 1fr 1fr;
      }
    }

    .infoDisplay {
      font-family: "Monaco", "Menlo", "Ubuntu Mono", monospace;
      font-size: 0.9em;
      color: #333;

      .label {
        font-size: 0.8em;
        color: #666;
        font-family: inherit;
      }
    }

    textarea {
      width: 100%;
      padding: 4px;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-size: 0.7em;
      font-family: "Monaco", "Menlo", "Ubuntu Mono", monospace;
      resize: vertical;
      min-height: 60px;
    }
  }
}
